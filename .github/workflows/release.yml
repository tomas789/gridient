name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Trigger on tag push with format v*, like v1.0.0

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch entire history for proper versioning
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine setuptools_scm
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
      
      - name: Build package
        run: |
          python -m build
      
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          
      - name: Upload dist artifact
        uses: actions/upload-artifact@v4
        with:
          name: distribution
          path: dist/
          
  build-docs:
    runs-on: ubuntu-latest
    needs: build-and-publish
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          if [ -f docs/requirements.txt ]; then pip install -r docs/requirements.txt; fi
      
      - name: Build documentation
        run: |
          cd docs
          make html
      
      - name: Upload documentation artifact
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: docs/build/html
          
  create-release:
    runs-on: ubuntu-latest
    needs: [build-and-publish, build-docs]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
      - name: Download documentation artifact
        uses: actions/download-artifact@v4
        with:
          name: documentation
          path: docs-output
          
      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: distribution
          path: dist
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            dist/* 